/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import java.sql.*;
import java.io.*;

import java.io.FileOutputStream;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.export.JRPdfExporter;

//import jasperreports.engine
/**
 *
 * @author LENOVO
 */
public class formpenduduk extends javax.swing.JFrame {

    /**
     * Creates new form formpenduduk
     */
    public formpenduduk() {
        initComponents();
        load_table();
        kosong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtktp = new javax.swing.JTextField();
        txtnama = new javax.swing.JTextField();
        txtalamat = new javax.swing.JTextField();
        cbkelamin = new javax.swing.JComboBox();
        cbstatus = new javax.swing.JComboBox();
        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Export = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));
        setSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("LCDMono2", 1, 24)); // NOI18N
        jLabel1.setText("DATA PENERIMA BLT");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 20, 250, 26);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("LCDMono2", 1, 12)); // NOI18N
        jLabel2.setText("No ktp");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 90, 70, 14);

        jLabel3.setFont(new java.awt.Font("LCDMono2", 1, 12)); // NOI18N
        jLabel3.setText("Nama");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 130, 60, 14);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("LCDMono2", 1, 12)); // NOI18N
        jLabel4.setText("Jenis Kelamin");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 170, 100, 14);

        jLabel5.setFont(new java.awt.Font("LCDMono2", 1, 12)); // NOI18N
        jLabel5.setText("Alamat");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 210, 70, 14);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("LCDMono2", 1, 12)); // NOI18N
        jLabel6.setText("Status");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 250, 70, 14);

        txtktp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtktpActionPerformed(evt);
            }
        });
        getContentPane().add(txtktp);
        txtktp.setBounds(180, 88, 188, 26);
        getContentPane().add(txtnama);
        txtnama.setBounds(180, 127, 188, 26);

        txtalamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtalamatActionPerformed(evt);
            }
        });
        getContentPane().add(txtalamat);
        txtalamat.setBounds(180, 200, 188, 26);

        cbkelamin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PILIH GENDER", "PRIA", "WANITA" }));
        cbkelamin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkelaminActionPerformed(evt);
            }
        });
        getContentPane().add(cbkelamin);
        cbkelamin.setBounds(180, 162, 188, 26);

        cbstatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PILIH STATUS", "Sudah Menerima", "Belum Menerima" }));
        cbstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbstatusActionPerformed(evt);
            }
        });
        getContentPane().add(cbstatus);
        cbstatus.setBounds(180, 240, 188, 26);

        insert.setFont(new java.awt.Font("LCDMono2", 0, 11)); // NOI18N
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        getContentPane().add(insert);
        insert.setBounds(430, 90, 69, 21);

        update.setFont(new java.awt.Font("LCDMono2", 0, 11)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(430, 130, 69, 21);

        reset.setFont(new java.awt.Font("LCDMono2", 0, 11)); // NOI18N
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(430, 170, 71, 21);

        delete.setFont(new java.awt.Font("LCDMono2", 0, 11)); // NOI18N
        delete.setText("HAPUS");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(430, 210, 71, 21);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "no ktp", "nama", "jenis kelamin", "alamat", "status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(26, 312, 480, 110);

        Export.setFont(new java.awt.Font("LCDMono2", 0, 11)); // NOI18N
        Export.setText("Export");
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });
        getContentPane().add(Export);
        Export.setBounds(430, 250, 71, 21);
        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 520, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtktpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtktpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtktpActionPerformed

    private void txtalamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtalamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtalamatActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
    try {
            String sql = "INSERT INTO penduduk VALUES ('"+txtktp.getText()+"','"+txtnama.getText()+"','"+cbkelamin.getSelectedItem()+"','"+txtalamat.getText()+"','"+cbstatus.getSelectedItem()+"')";
            java.sql.Connection conn=(Connection)config.configDB();
            java.sql.PreparedStatement pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        load_table();
        kosong();      // TODO add your handling code here:
    }//GEN-LAST:event_insertActionPerformed

    
    private void cbkelaminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkelaminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbkelaminActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "DELETE FROM penduduk";
            java.sql.Connection conn=(Connection)config.configDB();
            java.sql.PreparedStatement pst=conn.prepareStatement(sql);
            int input = JOptionPane.showConfirmDialog(null, "Do you want to proceed?", "Select an Option...",JOptionPane.YES_NO_CANCEL_OPTION);
            if (input == 0){
                pst.execute();
                JOptionPane.showMessageDialog(null, "Penyimpanan Berhasil Di Clear");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        load_table();
        kosong();
    }//GEN-LAST:event_resetActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        // TODO add your handling code here:
        /*UPDATE Customers
SET ContactName = 'Alfred Schmidt', City = 'Frankfurt'
WHERE CustomerID = 1;*/
        try {
            String sql = "update penduduk set `no ktp` = '"+txtktp.getText()+"', nama = '"+txtnama.getText()+"', `jenis kelamin` = '"+cbkelamin.getSelectedItem()+"', alamat = '"+txtalamat.getText()+"', status = '"+cbstatus.getSelectedItem()+"'  where `no ktp` = '"+txtktp.getText()+"'or nama = '"+txtnama.getText()+"'"; //; or `jenis kelamin` = '9811' or alamat = '9811' or status = 'KK'; (,'"+txtnama.getText()+"','"+cbkelamin.getSelectedItem()+"','"+txtalamat.getText()+"','"+cbstatus.getSelectedItem()+"')";
            java.sql.Connection conn=(Connection)config.configDB();
            java.sql.PreparedStatement pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil di Update");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        load_table();
        kosong();
    }//GEN-LAST:event_updateActionPerformed

    private void cbstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbstatusActionPerformed

    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        // TODO add your handling code here:
      java.sql.Connection conn=(Connection)config.configDB();
        try {
		
			String reportName = "myreport";
			Map<String, Object> parameters = new HashMap<String, Object>();

			// compiles jrxml
			JasperCompileManager.compileReportToFile(reportName + ".jrxml");
			// fills compiled report with parameters and a connection
			JasperPrint print = JasperFillManager.fillReport(reportName + ".jasper", parameters, conn);
			// exports report to pdf
			JRExporter exporter = new JRPdfExporter();
			exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
			exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here
			
			exporter.exportReport();

		} catch (Exception e) {
			throw new RuntimeException("It's not possible to generate the pdf report.", e);
		} finally {
			// it's your responsibility to close the connection, don't forget it!
			if (conn!= null) {
				try { conn.close(); } catch (Exception e) {}
			}
        }
    
    }//GEN-LAST:event_ExportActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            String sql = "Delete from penduduk Where `no ktp`='"+txtktp.getText()+"'";
            java.sql.Connection conn=(Connection)config.configDB();
            java.sql.PreparedStatement pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        load_table();
        kosong();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed
/*
    public void export() {
        String excelFilePath = "Reviews-export.xlsx";
 
        try (java.sql.Connection connection = (Connection)config.configDB()) {
            String sql = "SELECT * FROM penduduk";
 
            java.sql.Statement statement = connection.createStatement();
 
            java.sql.ResultSet result = statement.executeQuery(sql);
 
        
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Reviews");
 
            writeHeaderLine(sheet);
 
            writeDataLines(result, workbook, sheet);
 
            java.io.FileOutputStream outputStream = new java.io.FileOutputStream(excelFilePath);
            workbook.write(outputStream);
            
 
            statement.close();
 
        } catch (java.sql.SQLException e) {
            System.out.println("Datababse error:");
            e.printStackTrace();
        } catch (java.io.IOException e) {
            System.out.println("File IO error:");
            e.printStackTrace();
        }
    }*/
 
    private void writeHeaderLine(XSSFSheet sheet) {
 
        Row headerRow = sheet.createRow(0);
 
        Cell headerCell = headerRow.createCell(0);
        headerCell.setCellValue("No KTP");
 
        headerCell = headerRow.createCell(1);
        headerCell.setCellValue("Nama");
 
        headerCell = headerRow.createCell(2);
        headerCell.setCellValue("Jenis Kelamin");
 
        headerCell = headerRow.createCell(3);
        headerCell.setCellValue("Alamat");
 
        headerCell = headerRow.createCell(4);
        headerCell.setCellValue("Status");
    }
 
    private void writeDataLines(ResultSet result, XSSFWorkbook workbook,
            XSSFSheet sheet) throws SQLException {
        int rowCount = 1;
 
        while (result.next()) {
            String courseName = result.getString("no ktp");
            String studentName = result.getString("nama");
            String rating = result.getString("jenis kelamin");
            String timestamp = result.getString("alamat");
            String comment = result.getString("status");
 
            Row row = sheet.createRow(rowCount++);
 
            int columnCount = 0;
            Cell cell = row.createCell(columnCount++);
            cell.setCellValue(courseName);
 
            cell = row.createCell(columnCount++);
            cell.setCellValue(studentName);
 
            cell = row.createCell(columnCount++);
 
            CellStyle cellStyle = workbook.createCellStyle();
            CreationHelper creationHelper = workbook.getCreationHelper();
            cellStyle.setDataFormat(creationHelper.createDataFormat().getFormat("yyyy-MM-dd HH:mm:ss"));
            cell.setCellStyle(cellStyle);
 
            cell.setCellValue(timestamp);
 
            cell = row.createCell(columnCount++);
            cell.setCellValue(rating);
 
            cell = row.createCell(columnCount);
            cell.setCellValue(comment);
 
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formpenduduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formpenduduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formpenduduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formpenduduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formpenduduk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Export;
    private javax.swing.JComboBox cbkelamin;
    private javax.swing.JComboBox cbstatus;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField txtalamat;
    private javax.swing.JTextField txtktp;
    private javax.swing.JTextField txtnama;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void load_table() {
       // membuat tampilan model tabel
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No ktp");
        model.addColumn("Nama");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Alamat");
        model.addColumn("Status");

        //menampilkan data database kedalam tabel
        try {
            String sql = "select * from penduduk";
            java.sql.Connection conn=(java.sql.Connection)config.configDB();
            java.sql.Statement stm=conn.createStatement();
            java.sql.ResultSet res=stm.executeQuery(sql);
            while(res.next()){
                model.addRow(new Object[]{res.getString(1),res.getString(2),res.getString(3),res.getString(4),res.getString(5)});
            }
            jTable1.setModel(model);
        } catch (Exception e) {
        }
        }

    private void kosong() {
        txtktp.setText(null);
        txtnama.setText(null);
        cbkelamin.setSelectedItem(this); 
        txtalamat.setText(null);
        cbstatus.setSelectedItem(this); 
    }
    }

